/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/9.0.86
 * Generated at: 2024-07-12 04:57:30 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.WEB_002dINF.views.admin.resve;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class roomResve_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  public java.lang.String getServletInfo() {
    return "관리자 객실 예약 관리";
  }

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  static {
    _jspx_dependants = new java.util.HashMap<java.lang.String,java.lang.Long>(2);
    _jspx_dependants.put("jar:file:/C:/dev/workspace_spring/.metadata/.plugins/org.eclipse.wst.server.core/tmp0/wtpwebapps/hotel_prj/WEB-INF/lib/jstl-1.2.jar!/META-INF/c.tld", Long.valueOf(1153352682000L));
    _jspx_dependants.put("/WEB-INF/lib/jstl-1.2.jar", Long.valueOf(1716336001598L));
  }

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.LinkedHashSet<>(3);
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    if (!javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSP들은 오직 GET, POST 또는 HEAD 메소드만을 허용합니다. Jasper는 OPTIONS 메소드 또한 허용합니다.");
        return;
      }
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("<meta charset=\"UTF-8\">\r\n");
      out.write("<meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\r\n");
      out.write("<title>엘리시안 호텔 관리자 페이지</title>\r\n");
      out.write(" \r\n");
      out.write("<!-- favicon S -->\r\n");
      out.write("<link rel=\"shortcut icon\" href=\"/hotel_prj/admin/assets/static/images/logo/favicon.ico\" type=\"image/x-icon\">\r\n");
      out.write("<!-- favicon E -->\r\n");
      out.write("\r\n");
      out.write("<!-- datatable css S -->\r\n");
      out.write("<link rel=\"stylesheet\" href=\"/hotel_prj/admin/assets/extensions/datatables.net-bs5/css/dataTables.bootstrap5.min.css\">\r\n");
      out.write("<link rel=\"stylesheet\" crossorigin=\"\" href=\"/hotel_prj/admin/assets/compiled/css/table-datatable-jquery.css\">\r\n");
      out.write("<!-- datatable css E -->\r\n");
      out.write("\r\n");
      out.write("<!-- template css S -->\r\n");
      out.write("<link rel=\"stylesheet\" crossorigin href=\"/hotel_prj/admin/assets/compiled/css/app.css\">\r\n");
      out.write("<link rel=\"stylesheet\" crossorigin href=\"/hotel_prj/admin/assets/compiled/css/app-dark.css\">\r\n");
      out.write("<!-- template css E -->\r\n");
      out.write("\r\n");
      out.write("<link rel=\"stylesheet\" href=\"/hotel_prj/admin/assets/extensions/flatpickr/flatpickr.min.css\">\r\n");
      out.write("<!-- jQuery CDN S -->\r\n");
      out.write("<script src=\"https://ajax.googleapis.com/ajax/libs/jquery/2.2.4/jquery.min.js\"></script>\r\n");
      out.write("<!-- jQuery CDN E -->\r\n");
      out.write("\r\n");
      out.write("<style type = \"text/css\">\r\n");
      out.write("#table1_wrapper {\r\n");
      out.write("	width:1470px;\r\n");
      out.write("}\r\n");
      out.write("</style>\r\n");
      out.write("\r\n");
      out.write("<script type = \"text/javascript\">\r\n");
      out.write("	$(function() {\r\n");
      out.write("		$(\".sidebar-item.rem\").addClass(\"active\");\r\n");
      out.write("		$(\".submenu-item.rrm\").addClass(\"active\");\r\n");
      out.write("		\r\n");
      out.write("		$(document).on('click', '.sidebar-item', function() {\r\n");
      out.write("	        // 모든 .sidebar-item 요소에서 active 클래스 제거\r\n");
      out.write("	        $(\".sidebar-item\").removeClass(\"active\");\r\n");
      out.write("\r\n");
      out.write("	        // 클릭된 요소에만 active 클래스 추가\r\n");
      out.write("	        $(this).addClass(\"active\");\r\n");
      out.write("	    });\r\n");
      out.write("	    \r\n");
      out.write("	    $(document).on('click', '.submenu-item', function() {\r\n");
      out.write("	        // 모든 .sidebar-item 요소에서 active 클래스 제거\r\n");
      out.write("	        $(\".submenu-item\").removeClass(\"active\");\r\n");
      out.write("\r\n");
      out.write("	        // 클릭된 요소에만 active 클래스 추가\r\n");
      out.write("	        $(this).addClass(\"active\");\r\n");
      out.write("	    });\r\n");
      out.write("	}); // ready\r\n");
      out.write("</script>\r\n");
      out.write("</head>\r\n");
      out.write("\r\n");
      out.write("<body>\r\n");
      out.write("<script src=\"/hotel_prj/admin/assets/static/js/initTheme.js\"></script>\r\n");
      out.write("\r\n");
      out.write("<!-- app S -->\r\n");
      out.write("<div id=\"app\">\r\n");
      out.write("	<!-- sidebar S -->\r\n");
      out.write("	");
      org.apache.jasper.runtime.JspRuntimeLibrary.include(request, response, "/WEB-INF/views/admin/sidebar.jsp", out, false);
      out.write("\r\n");
      out.write("	<!-- sidebar E -->\r\n");
      out.write("		\r\n");
      out.write("	<!-- main S -->\r\n");
      out.write("	<div id=\"main\">\r\n");
      out.write("	\r\n");
      out.write("	<!-- header S -->\r\n");
      out.write("	");
      org.apache.jasper.runtime.JspRuntimeLibrary.include(request, response, "/WEB-INF/views/admin/header.jsp", out, false);
      out.write("\r\n");
      out.write("	<!-- header E -->\r\n");
      out.write("            \r\n");
      out.write("	<div class=\"page-heading\">\r\n");
      out.write("	    <h3>객실 예약 관리</h3>\r\n");
      out.write("	</div> \r\n");
      out.write("	\r\n");
      out.write("	<!-- page content S -->\r\n");
      out.write("	<div class=\"page-content mb-3\">\r\n");
      out.write("	<!-- Basic Tables S -->\r\n");
      out.write("    <section class=\"section\">\r\n");
      out.write("        <div class=\"card\">\r\n");
      out.write("            <div class=\"card-body\">\r\n");
      out.write("                <div class=\"table-responsive\">\r\n");
      out.write("                    <table class=\"table\" id=\"table1\">\r\n");
      out.write("                        <thead>\r\n");
      out.write("                            <tr>\r\n");
      out.write("                                <th>번호</th>\r\n");
      out.write("                                <th>예약번호</th>\r\n");
      out.write("                                <th>예약상태</th>\r\n");
      out.write("                                <th>상품명</th>\r\n");
      out.write("                                <th>체크인</th>\r\n");
      out.write("                                <th>체크아웃</th>\r\n");
      out.write("                                <th>예약일</th>\r\n");
      out.write("                                <th>예약자 영문이름</th>\r\n");
      out.write("                                <th>연락처</th>\r\n");
      out.write("                            </tr>\r\n");
      out.write("                        </thead>\r\n");
      out.write("                    </table>\r\n");
      out.write("                </div>\r\n");
      out.write("            </div>\r\n");
      out.write("        </div>\r\n");
      out.write("    </section>\r\n");
      out.write("    <!-- Basic Tables E -->\r\n");
      out.write("	</div>\r\n");
      out.write("	<!-- page content E -->\r\n");
      out.write("	\r\n");
      out.write("	<!-- modal S -->\r\n");
      out.write("	");
      org.apache.jasper.runtime.JspRuntimeLibrary.include(request, response, "/WEB-INF/views/admin/resve/roomResveModal.jsp", out, false);
      out.write('\r');
      out.write('\n');
      out.write('	');
      org.apache.jasper.runtime.JspRuntimeLibrary.include(request, response, "/WEB-INF/views/admin/modal/checkModal.jsp", out, false);
      out.write("\r\n");
      out.write("	<!-- modal E -->\r\n");
      out.write("\r\n");
      out.write("	<!-- footer S -->\r\n");
      out.write("	");
      org.apache.jasper.runtime.JspRuntimeLibrary.include(request, response, "/WEB-INF/views/admin/footer.jsp", out, false);
      out.write("\r\n");
      out.write("	<!-- footer E -->\r\n");
      out.write("            \r\n");
      out.write("    </div>\r\n");
      out.write("    <!-- main E -->\r\n");
      out.write("    \r\n");
      out.write("</div>\r\n");
      out.write("<!-- app E  -->\r\n");
      out.write("\r\n");
      out.write("<!-- 공통 필요 Script S -->\r\n");
      out.write("<script src=\"/hotel_prj/admin/assets/static/js/components/dark.js\"></script>\r\n");
      out.write("<script src=\"/hotel_prj/admin/assets/extensions/perfect-scrollbar/perfect-scrollbar.min.js\"></script>\r\n");
      out.write("<script src=\"/hotel_prj/admin/assets/compiled/js/app.js\"></script>\r\n");
      out.write("<!-- 공통 필요 Script E -->\r\n");
      out.write("\r\n");
      out.write("<script src=\"/hotel_prj/admin/assets/extensions/jquery/jquery.min.js\"></script>\r\n");
      out.write("<script src=\"/hotel_prj/admin/assets/extensions/datatables.net/js/jquery.dataTables.min.js\"></script>\r\n");
      out.write("<script src=\"/hotel_prj/admin/assets/extensions/datatables.net-bs5/js/dataTables.bootstrap5.min.js\"></script>\r\n");
      out.write("<script src=\"/hotel_prj/admin/assets/static/js/pages/datatables.js\"></script>\r\n");
      out.write("\r\n");
      out.write("<script type=\"text/javascript\">\r\n");
      out.write("	$(function() {\r\n");
      out.write("		var table = $('#table1').DataTable();\r\n");
      out.write("\r\n");
      out.write("		// 기존 DataTable 인스턴스 제거\r\n");
      out.write("		table.destroy();\r\n");
      out.write("		\r\n");
      out.write("		// 현재 페이지 DataTable 인스턴스 생성\r\n");
      out.write("		var table = $('#table1').DataTable({\r\n");
      out.write("			processing: true,\r\n");
      out.write("			serverSide: false,\r\n");
      out.write("			ajax: {\r\n");
      out.write("		       'url':'roomResList.do', \r\n");
      out.write("		       'type': 'POST',\r\n");
      out.write("		       'dataSrc':''\r\n");
      out.write("		    },\r\n");
      out.write("		    \r\n");
      out.write("		    // 컬럼 설정\r\n");
      out.write("			columns: [\r\n");
      out.write("				{\"data\": \"num\", \"width\": \"35px\"},\r\n");
      out.write("				{\"data\": \"payNum\", \"width\": \"150px\"},\r\n");
      out.write("				{\"data\": \"roomResStatus\", \"width\": \"130px\"},\r\n");
      out.write("				{\"data\": \"room\", \"width\": \"300px\"}, \r\n");
      out.write("				{\"data\": \"checkInStr\", \"width\": \"120px\"},\r\n");
      out.write("				{\"data\": \"checkOutStr\", \"width\": \"120px\"},\r\n");
      out.write("				{\"data\": \"roomResDateStr\", \"width\": \"120px\"},\r\n");
      out.write("				{\"data\": \"engName\", \"width\": \"150px\"},\r\n");
      out.write("				{\"data\": \"guestPhone\", \"width\": \"150px\"}\r\n");
      out.write("			],\r\n");
      out.write("			\r\n");
      out.write("			// 돔 설정\r\n");
      out.write("			dom:\r\n");
      out.write("				\"<'row'<'col-sm-12 col-md-11'f><'col-sm-12 col-md-1'l>>\" +\r\n");
      out.write("				\"<'row dt-row'<'col-sm-12'tr>>\" +\r\n");
      out.write("				\"<'row'<'col-sm-12 col-md-5'i><'col-sm-12 col-md-7'p>>\",\r\n");
      out.write("				\r\n");
      out.write("			// 언어 변경\r\n");
      out.write("			language: {\r\n");
      out.write("		        emptyTable: \"데이터가 없습니다.\",\r\n");
      out.write("		        zeroRecords: \"데이터가 없습니다.\",\r\n");
      out.write("		        lengthMenu: \"_MENU_ 개\",\r\n");
      out.write("		        search: \"검색 \",\r\n");
      out.write("		        searchPlaceholder: \"검색어를 입력하세요.\",\r\n");
      out.write("		        paginate: {\r\n");
      out.write("		            \"next\": \"다음\",\r\n");
      out.write("		            \"previous\": \"이전\"\r\n");
      out.write("		        },\r\n");
      out.write("		        info: \"현재 _START_ - _END_ / 총 _TOTAL_건\",\r\n");
      out.write("		        infoEmpty: \"데이터 없음\",\r\n");
      out.write("		        infoFiltered: \"( _MAX_건의 데이터에서 필터링됨 )\",\r\n");
      out.write("		        loadingRecords: \"로딩중...\",\r\n");
      out.write("		        processing:     \"잠시만 기다려 주세요...\"\r\n");
      out.write("		    }\r\n");
      out.write("		});\r\n");
      out.write("		\r\n");
      out.write("		// 검색 input 사이즈 조절\r\n");
      out.write("		$('#table1_wrapper').find('input[type=\"search\"]').removeClass('form-control-sm').attr('style', 'width:300px;');\r\n");
      out.write("		\r\n");
      out.write("	    // 날짜 기간 조회를 위한 input 추가\r\n");
      out.write("		$('#table1_filter').prepend('<input type=\"text\" id=\"toDate\" placeholder=\"연.월.일\" class=\"form-control flatpickr-basic flatpickr-input\" readonly=\"readonly\" style=\"width: 150px; margin: 0px 20px 0px 0px;\"> ');\r\n");
      out.write("		$('#table1_filter').prepend('<input type=\"text\" id=\"fromDate\" placeholder=\"연.월.일\" class=\"form-control flatpickr-basic flatpickr-input\" readonly=\"readonly\" style=\"width: 150px;\"> ~ ');\r\n");
      out.write("		\r\n");
      out.write("		// 예약 상태 select 추가\r\n");
      out.write("		$('#table1_filter').prepend('<select id=\"res_status\" class=\"form-select\" style=\"width: 150px; display: inline; margin: 0px 20px 0px 10px;\"></select>');\r\n");
      out.write("		$('#res_status').append('<option value=\"\">예약상태 선택</option>')\r\n");
      out.write("						.append('<option value=\"RESERVED\">RESERVED</option>')\r\n");
      out.write("						.append('<option value=\"CHECK IN\">CHECK IN</option>')\r\n");
      out.write("						.append('<option value=\"CHECK OUT\">CHECK OUT</option>')\r\n");
      out.write("						.append('<option value=\"CANCELED\">CANCELED</option>')\r\n");
      out.write("						.append('<option value=\"NO SHOW\">NO SHOW</option>');\r\n");
      out.write("\r\n");
      out.write("		// 검색 조건 select 추가\r\n");
      out.write("		$('#table1_filter').prepend('검색 조건<select id=\"select\" class=\"form-select\" style=\"width: 170px; display: inline; margin: 0px 20px 0px 10px;\"></select>');\r\n");
      out.write("		$('#table1 > thead > tr').children().each(function (indexInArray, valueOfElement) { \r\n");
      out.write("			// 필요 컬럼 선택 \r\n");
      out.write("			var requiredColumns = [1, 3, 4, 5, 6, 7, 8];\r\n");
      out.write("		    \r\n");
      out.write("		    // 현재 인덱스가 배열에 있는지 확인\r\n");
      out.write("		    if (requiredColumns.includes(indexInArray)) {\r\n");
      out.write("		        $('#select').append('<option>'+valueOfElement.innerHTML+'</option>');\r\n");
      out.write("		    }\r\n");
      out.write("		});\r\n");
      out.write("		\r\n");
      out.write("	    // 검색 input에 이벤트 리바인딩\r\n");
      out.write("		$('.dataTables_filter input').unbind().bind('keyup keydown input', function () {\r\n");
      out.write("			var colIndex = document.querySelector('#select').selectedIndex;\r\n");
      out.write("			\r\n");
      out.write("			// 선택한 인덱스와 실제 테이블 인덱스 번호 맞추기\r\n");
      out.write("			switch(colIndex) {\r\n");
      out.write("			case 0 : colIndex = 1; break;\r\n");
      out.write("			case 1 : colIndex = 3; break;\r\n");
      out.write("			case 2 : colIndex = 4; break;\r\n");
      out.write("			case 3 : colIndex = 5; break;\r\n");
      out.write("			case 4 : colIndex = 6; break;\r\n");
      out.write("			case 5 : colIndex = 7; break;\r\n");
      out.write("			case 6 : colIndex = 8; break;\r\n");
      out.write("			}\r\n");
      out.write("			//console.log(colIndex);\r\n");
      out.write("			table.column(colIndex).search(this.value).draw();\r\n");
      out.write("		});\r\n");
      out.write("		\r\n");
      out.write("	    // 날짜에 이벤트 리바인딩\r\n");
      out.write("		$('#toDate, #fromDate').unbind().bind('keyup change', function(){\r\n");
      out.write("	        table.draw();\r\n");
      out.write("	    });\r\n");
      out.write("	    \r\n");
      out.write("		// 예약 상태 변경 시 필터 적용\r\n");
      out.write("		$('#res_status').on('change', function() {\r\n");
      out.write("			var status = $(this).val();\r\n");
      out.write("			table.column(2).search(status).draw();\r\n");
      out.write("		});\r\n");
      out.write("	    \r\n");
      out.write("	    // 검색 조건 select에 chagne 이벤트 추가\r\n");
      out.write("	    $(\"#select\").on('change', function() {\r\n");
      out.write("			var columnIndex = $(\"#select option\").index($(\"#select option:selected\"));\r\n");
      out.write("			// 선택된 select이 날짜 관련(체크인, 체크아웃, 예약일) 인덱스일 경우만 함수 실행\r\n");
      out.write("			if(columnIndex == 2 || columnIndex == 3 || columnIndex == 4) {\r\n");
      out.write("				// 선택한 인덱스와 실제 테이블 인덱스 번호 맞추기\r\n");
      out.write("				columnIndex = columnIndex + 2;\r\n");
      out.write("				// 기존 필터 제거\r\n");
      out.write("				$.fn.dataTable.ext.search.pop();\r\n");
      out.write("				// 새 필터 추가\r\n");
      out.write("				$.fn.dataTable.ext.search.push(createDateRangeFilter(columnIndex));\r\n");
      out.write("				// 테이블 갱신\r\n");
      out.write("				table.draw();\r\n");
      out.write("			} // end if\r\n");
      out.write("			\r\n");
      out.write("			// select option이 변경될 때\r\n");
      out.write("			// 검색 입력값, 날짜 입력값 초기화\r\n");
      out.write("			table.search('').columns().search('').draw();\r\n");
      out.write("			$(\"#toDate\").val('');\r\n");
      out.write("			$(\"#fromDate\").val('');\r\n");
      out.write("			// 테이블 길이를 기본값(10)으로 설정\r\n");
      out.write("			table.page.len(10).draw();\r\n");
      out.write("			// 테이블 데이터 다시 로드\r\n");
      out.write("			table.ajax.reload(null, false); // false로 페이징 유지\r\n");
      out.write("		});\r\n");
      out.write("\r\n");
      out.write("	    // select이 날짜 관련(체크인, 체크아웃, 예약일)일 때 실행되는 함수\r\n");
      out.write("		// return이 true이면 검색 수행, false이면 무시\r\n");
      out.write("		function createDateRangeFilter(columnIndex) {\r\n");
      out.write("			return function(settings, data, dataIndex){\r\n");
      out.write("				var fromDate = new Date($(\"#fromDate\").val());\r\n");
      out.write("				fromDate.setDate(fromDate.getDate());\r\n");
      out.write("				\r\n");
      out.write("				var min = Date.parse(fromDate);\r\n");
      out.write("				var max = Date.parse($('#toDate').val());\r\n");
      out.write("				var tableDate = Date.parse(data[columnIndex]);\r\n");
      out.write("		\r\n");
      out.write("				if( (isNaN(min) && isNaN(max)) || \r\n");
      out.write("					(isNaN(min) && tableDate <= max) || \r\n");
      out.write("					(tableDate >= min && isNaN(max)) ||\r\n");
      out.write("					(tableDate >= min && tableDate <= max) ){ \r\n");
      out.write("						return true;\r\n");
      out.write("					}\r\n");
      out.write("				return false;\r\n");
      out.write("			}\r\n");
      out.write("		} // createDateRangeFilter\r\n");
      out.write("	    \r\n");
      out.write("	 	// 테이블의 예약번호 클릭시\r\n");
      out.write("	    $(document).on('click', '.payNum', function() {\r\n");
      out.write("	    	var payNum = $(this).text();\r\n");
      out.write("	    	\r\n");
      out.write("	    	loadData(payNum);\r\n");
      out.write("	    	\r\n");
      out.write("	    	// 모달 내의 모든 'is-invalid' 클래스 제거\r\n");
      out.write("	         $('#roomResDetail').find('.is-invalid').removeClass('is-invalid');\r\n");
      out.write("	         \r\n");
      out.write("	         // 모달 내의 모든 'parsley-custom-error-message' 클래스를 가진 span 태그 제거\r\n");
      out.write("	         $('#roomResDetail').find('span.parsley-custom-error-message').remove();\r\n");
      out.write("	        \r\n");
      out.write("	        // Bootstrap 모달 메소드를 사용하여 모달을 보여줍니다.\r\n");
      out.write("	        $('#roomResDetail').modal('show');\r\n");
      out.write("	    });\r\n");
      out.write("		\r\n");
      out.write("		function loadData(payNum) {\r\n");
      out.write("			$.ajax({\r\n");
      out.write("				url: 'roomResDetail.do',\r\n");
      out.write("				type: 'POST',\r\n");
      out.write("				contentType: 'application/json',\r\n");
      out.write("				dataType: 'JSON',\r\n");
      out.write("				data: JSON.stringify({payNum: payNum}),\r\n");
      out.write("				error: function(xhr) {\r\n");
      out.write("					console.log(xhr.status);\r\n");
      out.write("					alert(\"문제가 발생했습니다. 담당자에게 문의해주세요.\");\r\n");
      out.write("				},\r\n");
      out.write("				success: function(jsonObj) {\r\n");
      out.write("					// roomId의 앞 두 자리를 통해 roomFloor 설정\r\n");
      out.write("					var roomFloor = String(jsonObj.roomId).substr(0, 2);\r\n");
      out.write("					var roomId = jsonObj.roomId;\r\n");
      out.write("					var roomInfo = jsonObj.room;\r\n");
      out.write("	    			\r\n");
      out.write("					$(\"#payNum\").val(jsonObj.payNum);\r\n");
      out.write("					$(\"#roomFloor\").val(roomFloor+\"층\");\r\n");
      out.write("	    			\r\n");
      out.write("					$(\"#roomResStatus\").val(jsonObj.roomResStatus);\r\n");
      out.write("					$(\"#adultsNum\").val(jsonObj.adultsNumStr);\r\n");
      out.write("					$(\"#kidsNum\").val(jsonObj.kidsNumStr);\r\n");
      out.write("					$(\"#checkIn\").val(jsonObj.checkInStr);\r\n");
      out.write("					$(\"#checkOut\").val(jsonObj.checkOutStr);\r\n");
      out.write("	    			\r\n");
      out.write("					// flatpickr 인스턴스를 가져와서 업데이트\r\n");
      out.write("					$(\"#checkIn\").flatpickr().setDate(jsonObj.checkInStr);\r\n");
      out.write("					$(\"#checkOut\").flatpickr().setDate(jsonObj.checkOutStr);\r\n");
      out.write("	    			\r\n");
      out.write("					// flatpickr 인스턴스 생성 시 초기 값 설정\r\n");
      out.write("					$(\"#checkIn\").flatpickr({\r\n");
      out.write("						defaultDate: jsonObj.checkInStr,\r\n");
      out.write("						dateFormat: \"Y.m.d\"\r\n");
      out.write("					});\r\n");
      out.write("\r\n");
      out.write("					$(\"#checkOut\").flatpickr({\r\n");
      out.write("						defaultDate: jsonObj.checkOutStr,\r\n");
      out.write("						dateFormat: \"Y.m.d\"\r\n");
      out.write("					});\r\n");
      out.write("	    			\r\n");
      out.write("					$(\"#engName\").val(jsonObj.engName);\r\n");
      out.write("					$(\"#guestPhone\").val(jsonObj.guestPhone);\r\n");
      out.write("					$(\"#guestEmail\").val(jsonObj.guestEmail);\r\n");
      out.write("					$(\"#guestRequest\").val(jsonObj.guestRequest);\r\n");
      out.write("					//$(\"#cardName\").val(jsonObj.cardName);\r\n");
      out.write("					$(\"#cardNum\").val(jsonObj.cardNum);\r\n");
      out.write("					$(\"#payPrice\").val(jsonObj.payPriceStr);\r\n");
      out.write("					$(\"#payTime\").val(jsonObj.payTimeStr);\r\n");
      out.write("	    			\r\n");
      out.write("					var checkIn = $(\"#checkIn\").val();\r\n");
      out.write("					var checkOut = $(\"#checkOut\").val();\r\n");
      out.write("					\r\n");
      out.write("					$.ajax({\r\n");
      out.write("						url: 'roomInfo.do',\r\n");
      out.write("						type: 'POST',\r\n");
      out.write("						contentType: 'application/json',\r\n");
      out.write("						dataType: 'JSON',\r\n");
      out.write("						data: JSON.stringify({checkIn : checkIn, checkOut : checkOut}),\r\n");
      out.write("						error: function(xhr) {\r\n");
      out.write("							console.log(xhr.status);\r\n");
      out.write("							alert(\"문제가 발생했습니다. 담당자에게 문의해주세요.\");\r\n");
      out.write("							},\r\n");
      out.write("						success: function(jsonObj) {\r\n");
      out.write("							$(\"#roomInfo\").empty();\r\n");
      out.write("							var roomFlag = false;\r\n");
      out.write("							jsonObj.forEach(function(room) {\r\n");
      out.write("								if(room.roomId == roomId) {\r\n");
      out.write("									roomFlag = true;\r\n");
      out.write("								} // end if\r\n");
      out.write("								\r\n");
      out.write("								$(\"#roomInfo\").append(\"<option value=\\\"\" + room.roomId + \"\\\">\" + room.roomInfo + \"</option>\");\r\n");
      out.write("							})\r\n");
      out.write("							\r\n");
      out.write("							if(roomFlag == false) {\r\n");
      out.write("								$(\"#roomInfo\").append(\"<option value=\\\"\" + roomId + \"\\\">\" + roomId + \"호(\" + roomInfo + \")\" + \"</option>\");\r\n");
      out.write("							} // end if\r\n");
      out.write("							\r\n");
      out.write("							sortSelectOptions();\r\n");
      out.write("							$(\"#roomInfo\").val(roomId);\r\n");
      out.write("						}\r\n");
      out.write("					}); // ajax\r\n");
      out.write("				} // success\r\n");
      out.write("			}); // ajax\r\n");
      out.write("		} // loadData\r\n");
      out.write("		\r\n");
      out.write("		// 셀렉 옵션 정렬 함수\r\n");
      out.write("		function sortSelectOptions() {\r\n");
      out.write("			var selectElement = $(\"#roomInfo\");\r\n");
      out.write("			var options = selectElement.find('option');\r\n");
      out.write("			\r\n");
      out.write("			// 옵션을 값 기준으로 정렬\r\n");
      out.write("			options.sort(function(a, b){\r\n");
      out.write("				return a.value.localeCompare(b.value); // 문자열 비교에 따라 정렬\r\n");
      out.write("			})\r\n");
      out.write("			\r\n");
      out.write("			selectElement.html('').append(options);\r\n");
      out.write("		} // sortSelectOptions\r\n");
      out.write("		\r\n");
      out.write("		// 셀렉 값 변할 때 층 바꾸는 함수\r\n");
      out.write("		$(document).on('change', '#roomInfo', function() {\r\n");
      out.write("			// roomId의 앞 두 자리를 통해 roomFloor 설정\r\n");
      out.write("			var roomId = $(\"#roomInfo\").val();\r\n");
      out.write("			var roomFloor = roomId.substr(0, 2);\r\n");
      out.write("			$(\"#roomFloor\").val(roomFloor + \"층\");\r\n");
      out.write("		}); // change\r\n");
      out.write("	 	\r\n");
      out.write("	 	// 확인 모달창 불러오기\r\n");
      out.write("	    var confirmModal = new bootstrap.Modal(document.getElementById('confirmModal'));\r\n");
      out.write("\r\n");
      out.write("	    function showModal(title, body, actionText, actionCallback) {\r\n");
      out.write("	        $('#confirmModalLabel').text(title);\r\n");
      out.write("	        $('#confirmModalBody').text(body);\r\n");
      out.write("	        $('#confirmActionBtn').text(actionText);\r\n");
      out.write("	        $('#confirmActionBtn').off('click').on('click', function() {\r\n");
      out.write("	            actionCallback();\r\n");
      out.write("	            confirmModal.hide();\r\n");
      out.write("	        });\r\n");
      out.write("	        confirmModal.show();\r\n");
      out.write("	    }\r\n");
      out.write("\r\n");
      out.write("	    // 예약 수정 버튼 클릭 시\r\n");
      out.write("	    $('#chkUpdateBtn').on('click', function() {\r\n");
      out.write("	        showModal('예약 수정 확인', '예약 정보를 수정하시겠습니까?', '예', function() {\r\n");
      out.write("	        	var roomResStatus = $(\"#roomResStatus\").val();\r\n");
      out.write("	        	\r\n");
      out.write("	        	if(roomResStatus !== 'RESERVED') {\r\n");
      out.write("	    			alert(\"예약 수정은 예약완료(RESERVED) 상태에서만 가능합니다.\");\r\n");
      out.write("	    			return;\r\n");
      out.write("	    		} // end if\r\n");
      out.write("	        	\r\n");
      out.write("	            updateAction();\r\n");
      out.write("	        });\r\n");
      out.write("	    });\r\n");
      out.write("	    \r\n");
      out.write("	    // 체크인 처리 버튼 클릭 시\r\n");
      out.write("	    $(\"#chkCheckinBtn\").on('click', function() {\r\n");
      out.write("	    	showModal('체크인 확인', '체크인 처리하시겠습니까?', '예', function() {\r\n");
      out.write("	    		var roomResStatus = $(\"#roomResStatus\").val();\r\n");
      out.write("	    		var checkIn = $(\"#checkIn\").val();\r\n");
      out.write("				var today = new Date();\r\n");
      out.write("				var todayDateOnly = today.getFullYear() + '.' + String(today.getMonth()+1).padStart(2, '0') + '.' + String(today.getDate()).padStart(2, '0');\r\n");
      out.write("	    		\r\n");
      out.write("	    		if(roomResStatus !== 'RESERVED') {\r\n");
      out.write("	    			alert(\"체크인 처리는 예약완료(RESERVED) 상태에서만 가능합니다.\");\r\n");
      out.write("	    			return;\r\n");
      out.write("	    		} // end if\r\n");
      out.write("	    		\r\n");
      out.write("	    		if(checkIn !== todayDateOnly) {\r\n");
      out.write("	    			alert(\"체크인 가능한 날짜가 아닙니다.\");\r\n");
      out.write("	    			return;\r\n");
      out.write("	    		} // end if\r\n");
      out.write("	    		\r\n");
      out.write("	    		checkinAction();\r\n");
      out.write("	    	});\r\n");
      out.write("	    });\r\n");
      out.write("	 	\r\n");
      out.write("	 	// 체크아웃 처리 버튼 클릭 시\r\n");
      out.write("	    $('#chkCheckoutBtn').on('click', function() {\r\n");
      out.write("	        showModal('체크아웃 확인', '체크아웃 처리하시겠습니까?', '예', function() {\r\n");
      out.write("	        	var roomResStatus = $(\"#roomResStatus\").val();\r\n");
      out.write("	        	\r\n");
      out.write("	        	if(roomResStatus !== 'CHECK IN') {\r\n");
      out.write("	        		alert(\"체크아웃 처리는 체크인(CHECK IN) 상태에서만 가능합니다.\");\r\n");
      out.write("	        		return;\r\n");
      out.write("	        	} // end if\r\n");
      out.write("	        	\r\n");
      out.write("	            checkoutAction();\r\n");
      out.write("	        });\r\n");
      out.write("	    });\r\n");
      out.write("	 	\r\n");
      out.write("	 	// 예약 취소 버튼 클릭 시\r\n");
      out.write("	    $('#chkCancelBtn').on('click', function() {\r\n");
      out.write("	        showModal('예약 취소 확인', '예약을 취소처리하시겠습니까?', '예', function() {\r\n");
      out.write("				var roomResStatus = $(\"#roomResStatus\").val();\r\n");
      out.write("	    		\r\n");
      out.write("	    		if(roomResStatus !== 'RESERVED') {\r\n");
      out.write("	    			alert(\"예약 취소는 예약완료(RESERVED) 상태에서만 가능합니다.\");\r\n");
      out.write("	    			return;\r\n");
      out.write("	    		} // end if\r\n");
      out.write("	        	\r\n");
      out.write("	        	cancelAction();\r\n");
      out.write("	        });\r\n");
      out.write("	    });\r\n");
      out.write("	 	\r\n");
      out.write("	 	// 모달이 닫혔을 때 데이터 테이블 다시 로드\r\n");
      out.write("	 	$(\"#roomResDetail\").on('hidden.bs.modal', function() {\r\n");
      out.write("	 		$(\"#table1\").DataTable().ajax.reload(null, false); // false는 페이징 유지\r\n");
      out.write("	 	});\r\n");
      out.write("\r\n");
      out.write("	 	// 예약 정보 수정 처리 함수\r\n");
      out.write("		function updateAction() {\r\n");
      out.write("			var payNum = $(\"#payNum\").val();\r\n");
      out.write("	 		\r\n");
      out.write("			// 수정 가능한 데이터\r\n");
      out.write("			var roomId = $(\"#roomInfo\").val();\r\n");
      out.write("			var guestPhone = $(\"#guestPhone\").val();\r\n");
      out.write("			var guestEmail = $(\"#guestEmail\").val();\r\n");
      out.write("			var guestRequest = $(\"#guestRequest\").val();\r\n");
      out.write("	    	\r\n");
      out.write("			if(guestPhone === '') {\r\n");
      out.write("				alert(\"예약자의 연락처를 입력해주세요.\");\r\n");
      out.write("	    		\r\n");
      out.write("				setTimeout(function() {\r\n");
      out.write("					$(\"#guestPhone\").focus();\r\n");
      out.write("				}, 100); // 100ms 후에 focus 설정\r\n");
      out.write("	    		\r\n");
      out.write("				return;\r\n");
      out.write("			} // end if\r\n");
      out.write("	    	\r\n");
      out.write("			var patternPhone = /010-[^0][0-9]{3}-[0-9]{4}$/;\r\n");
      out.write("	    	\r\n");
      out.write("			if(!patternPhone.test(guestPhone)) {\r\n");
      out.write("				alert(\"연락처의 형식(010-1234-5678)을 확인해주세요.\");\r\n");
      out.write("	    		\r\n");
      out.write("				setTimeout(function() {\r\n");
      out.write("					$(\"#guestPhone\").focus();\r\n");
      out.write("				}, 100); // 100ms 후에 focus 설정\r\n");
      out.write("	    		\r\n");
      out.write("				return;\r\n");
      out.write("			} // end if\r\n");
      out.write("	    	\r\n");
      out.write("			if(guestEmail === '') {\r\n");
      out.write("				alert(\"예약자의 이메일을 입력해주세요.\");\r\n");
      out.write("	    		\r\n");
      out.write("				setTimeout(function() {\r\n");
      out.write("					$(\"#guestEmail\").focus();\r\n");
      out.write("				}, 100); // 100ms 후에 focus 설정\r\n");
      out.write("	    		\r\n");
      out.write("				return;\r\n");
      out.write("			} // end if\r\n");
      out.write("	    	\r\n");
      out.write("			var patternEmail = /^[0-9a-zA-Z]([-_\\.]?[0-9a-zA-Z])*@[0-9a-zA-Z]([-_\\.]?[0-9a-zA-Z])*\\.[a-zA-Z]{2,3}$/i;\r\n");
      out.write("	    	\r\n");
      out.write("			if(guestEmail.length < 6 || !patternEmail.test(guestEmail)) {\r\n");
      out.write("				alert(\"이메일 형식이 맞지 않습니다. 확인해주세요.\");\r\n");
      out.write("	    		\r\n");
      out.write("	    		setTimeout(function() {\r\n");
      out.write("					$(\"#guestEmail\").focus();\r\n");
      out.write("				}, 100); // 100ms 후에 focus 설정\r\n");
      out.write("	    		\r\n");
      out.write("				return;\r\n");
      out.write("			} // end if\r\n");
      out.write("	    	\r\n");
      out.write("	    	var roomResVO = {\r\n");
      out.write("	    		payNum: payNum,\r\n");
      out.write("	    		roomId: roomId,\r\n");
      out.write("	    		guestPhone: guestPhone,\r\n");
      out.write("	    		guestEmail: guestEmail,\r\n");
      out.write("	    		guestRequest: guestRequest\r\n");
      out.write("	    	}\r\n");
      out.write("	    	\r\n");
      out.write("	    	$.ajax({\r\n");
      out.write("	    		url: 'modifyRoomRes.do',\r\n");
      out.write("	    		type: 'POST',\r\n");
      out.write("	    		contentType: 'application/json',\r\n");
      out.write("	    		dataType: 'JSON',\r\n");
      out.write("	    		data: JSON.stringify(roomResVO),\r\n");
      out.write("	    		error: function(xhr) {\r\n");
      out.write("	    			console.log(xhr.status);\r\n");
      out.write("	    			alert(\"문제가 발생했습니다. 담당자에게 문의해주세요.\");\r\n");
      out.write("	    		},\r\n");
      out.write("	    		success: function(jsonObj) {\r\n");
      out.write("	    			if(jsonObj === true) {\r\n");
      out.write("		    			alert(\"예약 정보가 정상적으로 수정되었습니다.\");\r\n");
      out.write("	    			} else {\r\n");
      out.write("	    				alert(\"예약 정보가 정상적으로 수정되지 않았습니다. 담당자에게 문의해주세요.\");\r\n");
      out.write("	    			} // end else\r\n");
      out.write("	    			// 예약 정보 수정은 이미 수정할 값으로 선택되거나 수정된 값이 입력되어있는 상태이므로 reload 불필요\r\n");
      out.write("	    		},\r\n");
      out.write("	    	}); // ajax\r\n");
      out.write("	    } // updateAction\r\n");
      out.write("	    \r\n");
      out.write("	    // 체크인 처리 함수\r\n");
      out.write("	    function checkinAction() {\r\n");
      out.write("	    	var payNum = $(\"#payNum\").val();\r\n");
      out.write("			$.ajax({\r\n");
      out.write("				url: 'checkin.do',\r\n");
      out.write("				type: 'POST',\r\n");
      out.write("				contentType: 'application/json',\r\n");
      out.write("				dataType: 'JSON',\r\n");
      out.write("				data: JSON.stringify({payNum : payNum}),\r\n");
      out.write("				error: function(xhr) {\r\n");
      out.write("					console.log(xhr.status);\r\n");
      out.write("					alert(\"문제가 발생했습니다. 담당자에게 문의해주세요.\");\r\n");
      out.write("				},\r\n");
      out.write("				success: function(jsonObj) {\r\n");
      out.write("					if(jsonObj === true) {\r\n");
      out.write("			            alert(\"체크인 처리되었습니다.\");\r\n");
      out.write("						loadData(payNum);\r\n");
      out.write("					} else {\r\n");
      out.write("	    				alert(\"체크인이 정상적으로 처리되지 않았습니다. 담당자에게 문의해주세요.\");\r\n");
      out.write("	    			} // end else\r\n");
      out.write("				},\r\n");
      out.write("				complete: function() {\r\n");
      out.write("					$(\"#roomResStatus\").load(location.href + ' #roomResStatus');\r\n");
      out.write("				}\r\n");
      out.write("			}); // ajax\r\n");
      out.write("	    } // checkinAction\r\n");
      out.write("	    \r\n");
      out.write("	    // 체크아웃 처리 함수\r\n");
      out.write("	    function checkoutAction() {\r\n");
      out.write("	    	var payNum = $(\"#payNum\").val();\r\n");
      out.write("			$.ajax({\r\n");
      out.write("				url: 'checkout.do',\r\n");
      out.write("				type: 'POST',\r\n");
      out.write("				contentType: 'application/json',\r\n");
      out.write("				dataType: 'JSON',\r\n");
      out.write("				data: JSON.stringify({payNum : payNum}),\r\n");
      out.write("				error: function(xhr) {\r\n");
      out.write("					console.log(xhr.status);\r\n");
      out.write("					alert(\"문제가 발생했습니다. 담당자에게 문의해주세요.\");\r\n");
      out.write("				},\r\n");
      out.write("				success: function(jsonObj) {\r\n");
      out.write("					if(jsonObj === true) {\r\n");
      out.write("			            alert(\"체크아웃 처리되었습니다.\");\r\n");
      out.write("			            loadData(payNum);\r\n");
      out.write("					} else {\r\n");
      out.write("	    				alert(\"체크아웃이 정상적으로 처리되지 않았습니다. 담당자에게 문의해주세요.\");\r\n");
      out.write("	    			} // end else\r\n");
      out.write("				},\r\n");
      out.write("				complete: function() {\r\n");
      out.write("					$(\"#roomResStatus\").load(location.href + ' #roomResStatus');\r\n");
      out.write("				}\r\n");
      out.write("			}); // ajax\r\n");
      out.write("	    } // checkoutAction\r\n");
      out.write("\r\n");
      out.write("	    // 예약 취소 처리 함수\r\n");
      out.write("	    function cancelAction() {\r\n");
      out.write("	    	var payNum = $(\"#payNum\").val();\r\n");
      out.write("			$.ajax({\r\n");
      out.write("				url: 'cancelRoomRes.do',\r\n");
      out.write("				type: 'POST',\r\n");
      out.write("				contentType: 'application/json',\r\n");
      out.write("				dataType: 'JSON',\r\n");
      out.write("				data: JSON.stringify({payNum : payNum}),\r\n");
      out.write("				error: function(xhr) {\r\n");
      out.write("					console.log(xhr.status);\r\n");
      out.write("					alert(\"문제가 발생했습니다. 담당자에게 문의해주세요.\");\r\n");
      out.write("				},\r\n");
      out.write("				success: function(jsonObj) {\r\n");
      out.write("					if(jsonObj === true) {\r\n");
      out.write("			            alert(\"예약 취소 처리되었습니다.\");\r\n");
      out.write("			            loadData(payNum);\r\n");
      out.write("					} else {\r\n");
      out.write("						alert(\"예약 취소가 정상적으로 처리되지 않았습니다. 담당자에게 문의해주세요.\");\r\n");
      out.write("					} // end else\r\n");
      out.write("				},\r\n");
      out.write("				complete: function() {\r\n");
      out.write("					$(\"#roomResStatus\").load(location.href + ' #roomResStatus');\r\n");
      out.write("				}\r\n");
      out.write("			}); // ajax\r\n");
      out.write("	    } // cancelAction\r\n");
      out.write("	 	\r\n");
      out.write("		// 동적으로 생성된 input type=\"text\"에 flatpickr 스크립트 파일을 적용하기 위해 파일 추가\r\n");
      out.write("		$.getScript(\"/hotel_prj/admin/assets/extensions/flatpickr/flatpickr.min.js\")\r\n");
      out.write("		.done(function() {\r\n");
      out.write("			// flatpickr 스크립트 파일이 로드된 후에 initFlatpickr 함수 실행\r\n");
      out.write("			initFlatpickr();\r\n");
      out.write("		}).fail(function() {\r\n");
      out.write("			console.error(\"flatpickr 스크립트 파일을 불러올 수 없습니다.\");\r\n");
      out.write("		});\r\n");
      out.write("\r\n");
      out.write("		// flatpickr 스크립트 파일을 추가한 후에 실행될 함수 정의\r\n");
      out.write("		function initFlatpickr() {\r\n");
      out.write("			flatpickr('#toDate', {\r\n");
      out.write("				enableTime: false,\r\n");
      out.write("				dateFormat: \"Y.m.d\",\r\n");
      out.write("			});\r\n");
      out.write("\r\n");
      out.write("			flatpickr('#fromDate', {\r\n");
      out.write("				enableTime: false,\r\n");
      out.write("				dateFormat: \"Y.m.d\",\r\n");
      out.write("			});\r\n");
      out.write("		} // initFlatpickr\r\n");
      out.write("		\r\n");
      out.write("	}); // ready\r\n");
      out.write("	\r\n");
      out.write("</script>\r\n");
      out.write("<script src=\"/hotel_prj/admin/assets/extensions/flatpickr/flatpickr.min.js\"></script>\r\n");
      out.write("<script src=\"/hotel_prj/admin/assets/static/js/pages/date-picker.js\"></script>\r\n");
      out.write("</body>\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}

/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/9.0.86
 * Generated at: 2024-07-14 01:36:00 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.WEB_002dINF.views.user.cnfirm.mber.dining;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class reserveView_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  public java.lang.String getServletInfo() {
    return "다이닝 예약내역 페이지 상세 보기";
  }

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  static {
    _jspx_dependants = new java.util.HashMap<java.lang.String,java.lang.Long>(2);
    _jspx_dependants.put("jar:file:/C:/dev/workspace_spring/.metadata/.plugins/org.eclipse.wst.server.core/tmp0/wtpwebapps/hotel_prj/WEB-INF/lib/jstl-1.2.jar!/META-INF/c.tld", Long.valueOf(1153352682000L));
    _jspx_dependants.put("/WEB-INF/lib/jstl-1.2.jar", Long.valueOf(1716336001598L));
  }

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.LinkedHashSet<>(3);
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private org.apache.jasper.runtime.TagHandlerPool _005fjspx_005ftagPool_005fc_005fset_0026_005fvar_005fvalue_005fnobody;

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
    _005fjspx_005ftagPool_005fc_005fset_0026_005fvar_005fvalue_005fnobody = org.apache.jasper.runtime.TagHandlerPool.getTagHandlerPool(getServletConfig());
  }

  public void _jspDestroy() {
    _005fjspx_005ftagPool_005fc_005fset_0026_005fvar_005fvalue_005fnobody.release();
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    if (!javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSP들은 오직 GET, POST 또는 HEAD 메소드만을 허용합니다. Jasper는 OPTIONS 메소드 또한 허용합니다.");
        return;
      }
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html lang=\"ko\">\r\n");
      out.write("<head>\r\n");
      out.write("<meta http-equiv=\"Content-Type\" content=\"text/html; charset=UTF-8\">\r\n");
      out.write("<meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\">\r\n");
      out.write("<meta name=\"viewport\" content=\"width=device-width, initial-scale=1, user-scalable=no\">\r\n");
      out.write("<meta name=\"format-detection\" content=\"telephone=no\">\r\n");
      out.write("\r\n");
      out.write("<title>예약내역 - 다이닝 예약 내역, 예약 상세보기 | 엘리시안호텔</title>\r\n");
      out.write("\r\n");
      out.write("<!-- S head css -->\r\n");
      org.apache.jasper.runtime.JspRuntimeLibrary.include(request, response, "/WEB-INF/views/user/common/head_css.jsp", out, false);
      out.write("\r\n");
      out.write("<link href=\"http://localhost/hotel_prj/static/home/css/ko/pc/contents.css\" rel=\"stylesheet\" type=\"text/css\">\r\n");
      out.write("<!-- E head css -->\r\n");
      out.write("\r\n");
      out.write("<!-- S head script -->\r\n");
      org.apache.jasper.runtime.JspRuntimeLibrary.include(request, response, "/WEB-INF/views/user/common/head_script.jsp", out, false);
      out.write("\r\n");
      out.write("<!-- E head script -->\r\n");
      out.write("</head>\r\n");
      out.write("\r\n");
      out.write("<body>\r\n");
      out.write("<div class=\"skip\"><a href=\"#container\">본문 바로가기</a></div>\r\n");
      out.write("<div class=\"wrapper \">\r\n");
      out.write("\r\n");
      out.write("<!--S header  -->\r\n");
      org.apache.jasper.runtime.JspRuntimeLibrary.include(request, response, "/WEB-INF/views/user/header.jsp", out, false);
      out.write("\r\n");
      out.write("<!--E header  -->\r\n");
      out.write("\r\n");
      out.write("<!--(페이지 URL)-->\r\n");
      out.write("<script>\r\n");
      out.write("	$(function(){\r\n");
      out.write("		getDetail();\r\n");
      out.write("	}); // ready\r\n");
      out.write("\r\n");
      out.write("	//예약 내역 상세 조회 api\r\n");
      out.write("	function getDetail() {\r\n");
      out.write("		$.ajax({\r\n");
      out.write("			type : \"POST\",\r\n");
      out.write("			url : \"diningResViewResult.do\",\r\n");
      out.write("			contentType : \"application/json\",\r\n");
      out.write("			dataType : \"json\",\r\n");
      out.write("			data : JSON.stringify({\r\n");
      out.write("				payNum : $(\"#payNum\").val()\r\n");
      out.write("			}),\r\n");
      out.write("			beforeSend: function() {\r\n");
      out.write("				commonJs.showLoadingBar(); //로딩바 show\r\n");
      out.write("			},\r\n");
      out.write("			complete: function() {\r\n");
      out.write("				commonJs.closeLoadingBar(); //로딩바 hide\r\n");
      out.write("			},\r\n");
      out.write("			success : function(jsonObj){\r\n");
      out.write("				const diningName = jsonObj.diningName;\r\n");
      out.write("				const visitDate = jsonObj.visitDate;\r\n");
      out.write("				const visitTime = jsonObj.visitTime;\r\n");
      out.write("				const diningResStatus = jsonObj.diningResStatus;\r\n");
      out.write("				const isCancellable = diningResStatus === '예약' ? true : false;     //취소 가능 여부\r\n");
      out.write("				const isModifiable = diningResStatus === '예약' ? true : false;       //정보 변경 가능 여부\r\n");
      out.write("				\r\n");
      out.write("				//방문자 정보\r\n");
      out.write("				const visitorEmail = jsonObj.visitorEmail;\r\n");
      out.write("				const visitorName = jsonObj.visitorName;\r\n");
      out.write("				const visitorPhone = jsonObj.visitorPhone;\r\n");
      out.write("				const visitorRequest = jsonObj.visitorRequest;\r\n");
      out.write("				const adultCnt = jsonObj.adultCnt;\r\n");
      out.write("				const childCnt = jsonObj.childCnt;\r\n");
      out.write("				const babyCnt = jsonObj.babyCnt;\r\n");
      out.write("				const visitPeople = '방문 인원 {1}명'.replace(\"{1}\", jsonObj.visitPeople);\r\n");
      out.write("				const visitorCnt = `어른 ${adultCnt}명 | 어린이 ${childCnt}명 | 영유아 ${babyCnt}명`;\r\n");
      out.write("				\r\n");
      out.write("				$(\".titDep2\").text(diningName); //다이닝 이름\r\n");
      out.write("				$(\".titDep4\").text(diningResStatus); //예약 상태\r\n");
      out.write("				\r\n");
      out.write("				if(diningResStatus === '취소') {\r\n");
      out.write("					$(\".titDep4\").attr('style', 'color:#B01414');\r\n");
      out.write("				} // end if\r\n");
      out.write("				\r\n");
      out.write("				$(\".reserveInfo .txt\").text(`엘리시안 서울 | ${visitDate} | ${visitTime} | ${visitPeople}`); //호텔 명 | 예약 시간\r\n");
      out.write("				$(\".visitorEmail\").text(visitorEmail);\r\n");
      out.write("				$(\".visitorName\").text(visitorName);\r\n");
      out.write("				$(\".visitorPhone\").text(visitorPhone);\r\n");
      out.write("				$(\".visitorRequest\").text(visitorRequest);\r\n");
      out.write("				$(\".visitorCnt\").text(visitorCnt);\r\n");
      out.write("				\r\n");
      out.write("				//취소 가능\r\n");
      out.write("				if(isCancellable) {\r\n");
      out.write("					$(\"#cancelBtn\").show();\r\n");
      out.write("				} // end if\r\n");
      out.write("                \r\n");
      out.write("				//정보 수정 가능\r\n");
      out.write("				if(isModifiable) {\r\n");
      out.write("					$(\"#updateBtn\").show();\r\n");
      out.write("				} // end if\r\n");
      out.write("\r\n");
      out.write("				//방문일\r\n");
      out.write("				let visitDay = new Date(visitDate);\r\n");
      out.write("				visitDay.setHours(0);\r\n");
      out.write("				visitDay.setMinutes(0);\r\n");
      out.write("				visitDay.setSeconds(0);\r\n");
      out.write("				visitDay.setMilliseconds(0);\r\n");
      out.write("				\r\n");
      out.write("				//조회일\r\n");
      out.write("				let nowDate = new Date();\r\n");
      out.write("				nowDate.setHours(0);\r\n");
      out.write("				nowDate.setMinutes(0);\r\n");
      out.write("				nowDate.setSeconds(0);\r\n");
      out.write("				nowDate.setMilliseconds(0);\r\n");
      out.write("				\r\n");
      out.write("				//방문일과 조회일의 날짜 차이\r\n");
      out.write("				let diffDay = (visitDay - nowDate) / (1000 * 60 * 60 * 24);\r\n");
      out.write("				let refundRate = 1; // 환불률\r\n");
      out.write("				 \r\n");
      out.write("				if(diffDay <= 0) {\r\n");
      out.write("					refundRate = 0;\r\n");
      out.write("				} else if(diffDay == 1) {\r\n");
      out.write("					refundRate = 0.5;\r\n");
      out.write("				} // end else\r\n");
      out.write("                \r\n");
      out.write("				//결제금 정보\r\n");
      out.write("				const deposit = jsonObj.payPrice;\r\n");
      out.write("				if(deposit != null){\r\n");
      out.write("					const refundAmount = deposit * refundRate;       //최종 환불 금액\r\n");
      out.write("					const refundFee = deposit - refundAmount;        //취소 수수료\r\n");
      out.write("					\r\n");
      out.write("					$(\"#amount\").text(fncComma(deposit));\r\n");
      out.write("					$(\"#refundAmount\").text(fncComma(refundAmount));\r\n");
      out.write("					$(\"#refundFee\").text(fncComma(refundFee));\r\n");
      out.write("					$(\"#timeInfoMsg\").text(\"수수료 계산 기준 일시  : \" + new Date().format(\"yyyy-MM-dd HH:mm\"));\r\n");
      out.write("					$(\".depositAmount\").text(fncComma(deposit));\r\n");
      out.write("				} else {\r\n");
      out.write("					//예약금이 없을 경우 예약금 부분 숨김처리\r\n");
      out.write("					$(\".total\").hide();\r\n");
      out.write("					$(\"#timeInfoMsgLi\").hide();\r\n");
      out.write("				} // end else\r\n");
      out.write("			},\r\n");
      out.write("			error:function(r, s, e){\r\n");
      out.write("				alert('Ajax 통신중 에러가 발생하였습니다\\nError Code : \\\"{1}\\\"\\nError : \\\"{2}\\\"'.replace(\"{1}\", r.status).replace(\"{2}\", r.responseText));\r\n");
      out.write("			}\r\n");
      out.write("		}); // ajax\r\n");
      out.write("	} // getDetail\r\n");
      out.write("\r\n");
      out.write("	//예약 취소\r\n");
      out.write("	function fncCancel(){\r\n");
      out.write("		$.ajax({\r\n");
      out.write("			type : \"POST\",\r\n");
      out.write("			url : \"diningResvCancel.do\",\r\n");
      out.write("			contentType : \"application/json\",\r\n");
      out.write("			dataType : \"json\",\r\n");
      out.write("			data : JSON.stringify({\r\n");
      out.write("				payNum: $(\"#payNum\").val(),\r\n");
      out.write("			}),\r\n");
      out.write("			beforeSend: function() {\r\n");
      out.write("				commonJs.showLoadingBar(); //로딩바 show\r\n");
      out.write("			},\r\n");
      out.write("			complete: function() {\r\n");
      out.write("				commonJs.closeLoadingBar(); //로딩바 hide\r\n");
      out.write("			},\r\n");
      out.write("			success : function(jsonObj){\r\n");
      out.write("				var resultCode = jsonObj.resultCode;\r\n");
      out.write("				if (resultCode == \"SUCCESS\") {\r\n");
      out.write("					alert(\"예약이 취소 처리되었습니다.\");\r\n");
      out.write("					commonJs.popClose($('#layerPop2'));\r\n");
      out.write("					fncList();\r\n");
      out.write("				} else {\r\n");
      out.write("					alert(\"죄송합니다. 예약 취소가 정상적으로 처리되지 않았습니다. 관리자에게 문의해주세요.\");\r\n");
      out.write("				} // end else\r\n");
      out.write("			},\r\n");
      out.write("			error:function(r, s, e){\r\n");
      out.write("				alert('Ajax 통신중 에러가 발생하였습니다\\nError Code : \\\"{1}\\\"\\nError : \\\"{2}\\\"'.replace(\"{1}\", r.status).replace(\"{2}\", r.responseText));\r\n");
      out.write("			}\r\n");
      out.write("		}); // ajax\r\n");
      out.write("	} // fncCancel\r\n");
      out.write("\r\n");
      out.write("	function fncUpdateForm() {\r\n");
      out.write("		location.href = \"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${pageContext.request.contextPath}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/user/infoUpdateForm.do?payNum=\" + $(\"#payNum\").val();\r\n");
      out.write("	} // fncUpdateForm\r\n");
      out.write("\r\n");
      out.write("	function fncList(){\r\n");
      out.write("		location.href = '");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${pageContext.request.contextPath}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/user/diningResList.do';\r\n");
      out.write("	} // fncList\r\n");
      out.write("</script>\r\n");
      out.write("\r\n");
      if (_jspx_meth_c_005fset_005f0(_jspx_page_context))
        return;
      out.write("\r\n");
      out.write("<input type=\"hidden\" id=\"payNum\" name=\"payNum\" value=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${payNum}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("\">\r\n");
      out.write("\r\n");
      out.write("<div id=\"container\" class=\"container mypage\">\r\n");
      out.write("\r\n");
      out.write("<script type=\"text/javascript\">\r\n");
      out.write("	$(function(){\r\n");
      out.write("		fncLnbInfoApi();\r\n");
      out.write("	}); // ready\r\n");
      out.write("</script> \r\n");
      out.write("\r\n");
      out.write("<h1 class=\"hidden\">마이페이지</h1>\r\n");
      out.write("<div class=\"topArea\">\r\n");
      out.write("	<div class=\"topInner\">\r\n");
      out.write("		<h2 class=\"titDep1\">My Page</h2>\r\n");
      out.write("		<p class=\"pageGuide\">회원을 위한 다양한 혜택이 준비되어 있습니다.</p>\r\n");
      out.write("	</div>\r\n");
      out.write("</div> \r\n");
      out.write("\r\n");
      out.write("<div class=\"inner\">\r\n");
      out.write("	<!-- LNB -->\r\n");
      out.write("	");
      org.apache.jasper.runtime.JspRuntimeLibrary.include(request, response, "/WEB-INF/views/user/mypage/lnb.jsp", out, false);
      out.write("\r\n");
      out.write("	<!-- LNB -->\r\n");
      out.write("	\r\n");
      out.write("	<!-- myContents -->\r\n");
      out.write("	<div class=\"myContents drDiningMypage\">\r\n");
      out.write("	<h2 class=\"titDep2\"></h2>\r\n");
      out.write("	<!-- 예약 정보 -->\r\n");
      out.write("	<h3 class=\"hidden\">예약 정보 </h3>\r\n");
      out.write("	<div class=\"reserveInfo\">\r\n");
      out.write("		<h4 class=\"titDep4\"></h4>\r\n");
      out.write("		<div class=\"commWrap\">\r\n");
      out.write("		<div class=\"commlist\">\r\n");
      out.write("			<span class=\"txt\"></span>\r\n");
      out.write("		</div>\r\n");
      out.write("		</div>\r\n");
      out.write("	</div>\r\n");
      out.write("	<!-- //예약 정보 -->\r\n");
      out.write("\r\n");
      out.write("	<!-- 방문자 정보 -->\r\n");
      out.write("	<h3 class=\"titDep3\">\r\n");
      out.write("		방문자 정보\r\n");
      out.write("		<button type=\"button\" id=\"updateBtn\" class=\"btnModify\" onclick=\"fncUpdateForm();\" style=\"display: none\">정보수정</button>\r\n");
      out.write("	</h3>\r\n");
      out.write("\r\n");
      out.write("	<table class=\"tblV\">\r\n");
      out.write("		<colgroup>\r\n");
      out.write("			<col style=\"width:240px\">\r\n");
      out.write("			<col style=\"width:auto\">\r\n");
      out.write("		</colgroup>\r\n");
      out.write("	\r\n");
      out.write("		<caption>예약 방문자정보 목록</caption>\r\n");
      out.write("		<thead>\r\n");
      out.write("		<tbody>\r\n");
      out.write("			<tr>\r\n");
      out.write("			    <th scope=\"row\">이름</th>\r\n");
      out.write("			    <td class=\"visitorName\"></td>\r\n");
      out.write("			</tr>\r\n");
      out.write("                    \r\n");
      out.write(" 			<tr>\r\n");
      out.write("				<th scope=\"row\">연락처</th>\r\n");
      out.write("				<td class=\"visitorPhone\"></td>\r\n");
      out.write("			</tr>\r\n");
      out.write("			\r\n");
      out.write("			<tr>\r\n");
      out.write("				<th scope=\"row\">이메일</th>\r\n");
      out.write("				<td class=\"lower visitorEmail\"></td>\r\n");
      out.write("			</tr>\r\n");
      out.write("                    \r\n");
      out.write("			<tr>\r\n");
      out.write("				<th scope=\"row\">요청사항</th>\r\n");
      out.write("				<td class=\"visitorRequest\"></td>\r\n");
      out.write("			</tr>\r\n");
      out.write("                    \r\n");
      out.write("			<tr>\r\n");
      out.write("				<th scope=\"row\">내역</th>\r\n");
      out.write("				<td class=\"visitorCnt\"></td>\r\n");
      out.write("			</tr>\r\n");
      out.write("		</tbody>\r\n");
      out.write("	</table>\r\n");
      out.write("	<!-- //회원 정보 -->\r\n");
      out.write("\r\n");
      out.write("	<!-- 금액 정보 -->\r\n");
      out.write("	<h3 class=\"hidden\">금액 정보</h3>\r\n");
      out.write("	<div class=\"total noMember\">\r\n");
      out.write("		<div class=\"totalWrap type02\">\r\n");
      out.write("			<span class=\"tit\">선 결제 금액(예약금)</span>\r\n");
      out.write("			<strong class=\"pay\"><em class=\"depositAmount\"></em>KRW</strong>\r\n");
      out.write("		</div>\r\n");
      out.write("	</div>\r\n");
      out.write("	<!-- //금액 정보 -->\r\n");
      out.write("\r\n");
      out.write("	<!-- 취소 규정 -->\r\n");
      out.write("	<h3 class=\"titDep3 refundPolicyTitle\">취소 규정</h3>\r\n");
      out.write("	<ul class=\"listDep1 refundPolicy\">\r\n");
      out.write("		<li>노쇼 시 : 환불 불가</li>\r\n");
      out.write("		<li>당일 취소 : 환불 불가</li>\r\n");
      out.write("		<li>1일 전 취소 : 50% 환불</li>\r\n");
      out.write("		<li>2일 전 취소 : 100% 환불</li>\r\n");
      out.write("	</ul>\r\n");
      out.write("	<!-- // 취소 규정 -->\r\n");
      out.write("		\r\n");
      out.write("	<div class=\"btnArea\">\r\n");
      out.write("		<a href=\"#\" class=\"btnSC btnL\" onclick=\"fncList();\">목록</a>\r\n");
      out.write("		<a href=\"#\" id=\"cancelBtn\" class=\"btnSC btnL active\" onclick=\"commonJs.popShow($('#layerPop2'))\" style=\"display: none\">예약 취소</a>\r\n");
      out.write("	</div>\r\n");
      out.write("\r\n");
      out.write("	</div>\r\n");
      out.write("	<!-- MyContents -->\r\n");
      out.write("\r\n");
      out.write("<!-- 예약취소 Layer -->\r\n");
      out.write("<div id=\"layerPop2\" class=\"layerPop\">\r\n");
      out.write("    <div class=\"layerCont\">\r\n");
      out.write("        <div class=\"reserveOpArea drDiningCancel\">\r\n");
      out.write("            <strong class=\"tit\">예약 취소 </strong>\r\n");
      out.write("            <p class=\"txtConfirm\">예약을 취소 하시겠습니까? </p>\r\n");
      out.write("            <ul class=\"listDep1\">\r\n");
      out.write("                <li>예약취소 시 기존 예약으로 복구가 불가합니다. </li>\r\n");
      out.write("                <li>취소 및 환불 정책 기준으로 예약 취소가 진행됩니다. </li>\r\n");
      out.write("            </ul>\r\n");
      out.write("            \r\n");
      out.write("            <div class=\"total\">\r\n");
      out.write("                <div class=\"totalWrap\">\r\n");
      out.write("                    <span class=\"tit\">예약 금액</span>\r\n");
      out.write("                    <strong class=\"pay\"><em id=\"amount\"></em></strong>\r\n");
      out.write("                </div>\r\n");
      out.write("                \r\n");
      out.write("                <div class=\"totalWrap\">\r\n");
      out.write("                    <span class=\"tit\">취소 수수료</span>\r\n");
      out.write("                    <strong class=\"pay\"><em id=\"refundFee\"></em></strong>\r\n");
      out.write("                </div>\r\n");
      out.write("                \r\n");
      out.write("                <div class=\"totalWrap type02\">\r\n");
      out.write("                    <span class=\"tit\">최종 환불 금액</span>\r\n");
      out.write("                    <strong class=\"pay\"><em id=\"refundAmount\"></em>KRW</strong>\r\n");
      out.write("                </div>\r\n");
      out.write("            </div>\r\n");
      out.write("            \r\n");
      out.write("            <ul class=\"txtGuide\" id=\"timeInfoMsgLi\">\r\n");
      out.write("	            <li>취소수수료는 [예약취소] 버튼이 눌러진 시간을 기준으로 처리 됩니다. 화면상 수수료 계산 시간과 상이할 경우를 유의해 주세요. (단, 예약 후 30분 이내에 취소 시, 모든 취소수수료 미 발생)</li>\r\n");
      out.write("                <li id=\"timeInfoMsg\"></li>\r\n");
      out.write("            </ul>\r\n");
      out.write("            \r\n");
      out.write("            <div class=\"btnArea\">\r\n");
      out.write("                <button type=\"button\" class=\"btnSC btnM\" onclick=\"commonJs.popClose($('#layerPop2'))\">취소 </button>\r\n");
      out.write("                <button type=\"button\" class=\"btnSC btnM active\" onclick=\"fncCancel();\">예약 취소 </button>\r\n");
      out.write("            </div>\r\n");
      out.write("        </div>\r\n");
      out.write("        <button type=\"button\" class=\"btnClose\" onclick=\"commonJs.popClose($('#layerPop2'))\">닫기 </button>\r\n");
      out.write("    </div>\r\n");
      out.write("</div>\r\n");
      out.write("<!-- //예약취소 Layer -->\r\n");
      out.write("		\r\n");
      out.write("</div>\r\n");
      out.write("<!-- //inner -->\r\n");
      out.write("	\r\n");
      out.write("</div>\r\n");
      out.write("<!-- //container -->\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("<!--S footer  -->\r\n");
      org.apache.jasper.runtime.JspRuntimeLibrary.include(request, response, "/WEB-INF/views/user/footer.jsp", out, false);
      out.write("\r\n");
      out.write("<!--E footer  -->\r\n");
      out.write("\r\n");
      out.write("</div>\r\n");
      out.write("<!-- //wrapper -->\r\n");
      out.write("\r\n");
      out.write("<!-- layer 생성 시 배경 어둡게 -->\r\n");
      out.write("<div class=\"dimmed\" style=\"display: none;\"></div>\r\n");
      out.write("\r\n");
      out.write("</body>\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }

  private boolean _jspx_meth_c_005fset_005f0(javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  c:set
    org.apache.taglibs.standard.tag.rt.core.SetTag _jspx_th_c_005fset_005f0 = (org.apache.taglibs.standard.tag.rt.core.SetTag) _005fjspx_005ftagPool_005fc_005fset_0026_005fvar_005fvalue_005fnobody.get(org.apache.taglibs.standard.tag.rt.core.SetTag.class);
    boolean _jspx_th_c_005fset_005f0_reused = false;
    try {
      _jspx_th_c_005fset_005f0.setPageContext(_jspx_page_context);
      _jspx_th_c_005fset_005f0.setParent(null);
      // /WEB-INF/views/user/cnfirm/mber/dining/reserveView.jsp(187,0) name = var type = java.lang.String reqTime = false required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_c_005fset_005f0.setVar("payNum");
      // /WEB-INF/views/user/cnfirm/mber/dining/reserveView.jsp(187,0) name = value type = javax.el.ValueExpression reqTime = true required = false fragment = false deferredValue = true expectedTypeName = java.lang.Object deferredMethod = false methodSignature = null
      _jspx_th_c_005fset_005f0.setValue(new org.apache.jasper.el.JspValueExpression("/WEB-INF/views/user/cnfirm/mber/dining/reserveView.jsp(187,0) '${payNum}'",_jsp_getExpressionFactory().createValueExpression(_jspx_page_context.getELContext(),"${payNum}",java.lang.Object.class)).getValue(_jspx_page_context.getELContext()));
      int _jspx_eval_c_005fset_005f0 = _jspx_th_c_005fset_005f0.doStartTag();
      if (_jspx_th_c_005fset_005f0.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
      _005fjspx_005ftagPool_005fc_005fset_0026_005fvar_005fvalue_005fnobody.reuse(_jspx_th_c_005fset_005f0);
      _jspx_th_c_005fset_005f0_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_c_005fset_005f0, _jsp_getInstanceManager(), _jspx_th_c_005fset_005f0_reused);
    }
    return false;
  }
}
